# Generated by ffi_gen. Please do not change this file by hand.

require 'ffi'

module RLTK::CG::Bindings
  extend FFI::Library
  ffi_lib 'LLVM-ECB-3.0'
  
  def self.attach_function(name, *_)
    begin; super; rescue FFI::NotFoundError => e
      (class << self; self; end).class_eval { define_method(name) { |*_| raise e } }
    end
  end
  
  ECB_VERSION = 0
  
  TARGET_VERSION_MAJOR = 3
  
  TARGET_VERSION_MINOR = 0
  
  # (Not documented)
  # 
  # @method ecb_version()
  # @return [String] 
  # @scope class
  attach_function :ecb_version, :LLVMECBVersion, [], :string
  
  # (Not documented)
  # 
  # @method target_version()
  # @return [String] 
  # @scope class
  attach_function :target_version, :LLVMTargetVersion, [], :string
  
  # (Not documented)
  # 
  # @method initialize_all_asm_parsers()
  # @return [nil] 
  # @scope class
  attach_function :initialize_all_asm_parsers, :LLVMInitializeAllAsmParsers, [], :void
  
  # (Not documented)
  # 
  # @method initialize_all_asm_printers()
  # @return [nil] 
  # @scope class
  attach_function :initialize_all_asm_printers, :LLVMInitializeAllAsmPrinters, [], :void
  
  # (Not documented)
  # 
  # @method initialize_native_target_asm_parser()
  # @return [nil] 
  # @scope class
  attach_function :initialize_native_target_asm_parser, :LLVMInitializeNativeTargetAsmParser, [], :void
  
  # (Not documented)
  # 
  # @method initialize_native_target_asm_printer()
  # @return [nil] 
  # @scope class
  attach_function :initialize_native_target_asm_printer, :LLVMInitializeNativeTargetAsmPrinter, [], :void
  
  # (Not documented)
  # 
  # @method print_module(mod, fd)
  # @param [FFI::Pointer(ModuleRef)] mod 
  # @param [Integer] fd 
  # @return [nil] 
  # @scope class
  attach_function :print_module, :LLVMPrintModule, [:pointer, :int], :void
  
  # (Not documented)
  # 
  # @method load_library_permanently(filename)
  # @param [String] filename 
  # @return [Integer] 
  # @scope class
  attach_function :load_library_permanently, :LLVMLoadLibraryPermanently, [:string], :int
  
  # (Not documented)
  # 
  # @method print_value(val, fd)
  # @param [FFI::Pointer(ValueRef)] val 
  # @param [Integer] fd 
  # @return [nil] 
  # @scope class
  attach_function :print_value, :LLVMPrintValue, [:pointer, :int], :void
  
  # (Not documented)
  class OpaqueTarget < FFI::Struct
    layout :dummy, :char
  end
  
  # (Not documented)
  class OpaqueTriple < FFI::Struct
    layout :dummy, :char
  end
  
  # // Functions
  # 
  # @method get_host_triple_string()
  # @return [String] 
  # @scope class
  attach_function :get_host_triple_string, :LLVMGetHostTripleString, [], :string
  
  # (Not documented)
  # 
  # @method triple_create(string)
  # @param [String] string 
  # @return [OpaqueTriple] 
  # @scope class
  attach_function :triple_create, :LLVMTripleCreate, [:string], OpaqueTriple
  
  # (Not documented)
  # 
  # @method ecb_initialize_all_targets()
  # @return [nil] 
  # @scope class
  attach_function :ecb_initialize_all_targets, :LLVMECBInitializeAllTargets, [], :void
  
  # (Not documented)
  # 
  # @method ecb_initialize_native_target()
  # @return [nil] 
  # @scope class
  attach_function :ecb_initialize_native_target, :LLVMECBInitializeNativeTarget, [], :void
  
  # (Not documented)
  # 
  # @method get_target_from_name(name)
  # @param [String] name 
  # @return [OpaqueTarget] 
  # @scope class
  attach_function :get_target_from_name, :LLVMGetTargetFromName, [:string], OpaqueTarget
  
  # (Not documented)
  # 
  # @method get_target_from_triple(triple)
  # @param [OpaqueTriple] triple 
  # @return [OpaqueTarget] 
  # @scope class
  attach_function :get_target_from_triple, :LLVMGetTargetFromTriple, [OpaqueTriple], OpaqueTarget
  
end
